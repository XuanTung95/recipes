[
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[flutter::zip]/resources/zip.py"
    ],
    "name": "Zip build",
    "stdin": "{\"entries\": [{\"path\": \"[CACHE]/builder/src/build\", \"type\": \"dir\"}], \"output\": \"[CLEANUP]/tmp_tmp_1/test1.zip\", \"root\": \"[CACHE]/builder/src\"}"
  },
  {
    "cmd": [
      "python",
      "RECIPE_REPO[depot_tools]/gsutil.py",
      "stat",
      "gs://flutter_infra/flutter//test1.zip"
    ],
    "name": "Ensure flutter//test1.zip does not already exist on cloud storage"
  },
  {
    "cmd": [
      "vpython",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "rmtree",
      "[CLEANUP]/tmp_tmp_1"
    ],
    "infra_step": true,
    "name": "temp dir for Upload test.zip"
  },
  {
    "cmd": [],
    "name": "RECIPE CRASH (Uncaught exception)",
    "~followup_annotations": [
      "@@@STEP_EXCEPTION@@@",
      "The recipe has crashed at point 'Uncaught exception'!",
      "",
      "Traceback (most recent call last):",
      "  File \"RECIPE_REPO[recipe_engine]/recipe_engine/internal/engine.py\", in run_steps",
      "    raw_result = recipe_obj.run_steps(api, engine)",
      "  File \"RECIPE_REPO[recipe_engine]/recipe_engine/internal/recipe_deps.py\", in run_steps",
      "    properties_def, api=api)",
      "  File \"RECIPE_REPO[recipe_engine]/recipe_engine/internal/property_invoker.py\", in invoke_with_properties",
      "    arg_names, **additional_args)",
      "  File \"RECIPE_REPO[recipe_engine]/recipe_engine/internal/property_invoker.py\", in _invoke_with_properties",
      "    return callable_obj(*props, **additional_args)",
      "  File \"RECIPE_REPO[flutter]/recipe_modules/bucket_util/examples/full.py\", line 16, in RunSteps",
      "    'test1.zip') # zip_name",
      "  File \"RECIPE_REPO[recipe_engine]/recipe_engine/recipe_api.py\", in _inner",
      "    return func(*a, **kw)",
      "  File \"RECIPE_REPO[flutter]/recipe_modules/bucket_util/api.py\", line 40, in upload_folder",
      "    zip_name)",
      "  File \"RECIPE_REPO[recipe_engine]/recipe_engine/recipe_api.py\", in _inner",
      "    return func(*a, **kw)",
      "  File \"RECIPE_REPO[flutter]/recipe_modules/bucket_util/api.py\", line 76, in upload_folder_and_files",
      "    self.safe_upload(local_zip, remote_zip)",
      "  File \"RECIPE_REPO[recipe_engine]/recipe_engine/recipe_api.py\", in _inner",
      "    return func(*a, **kw)",
      "  File \"RECIPE_REPO[flutter]/recipe_modules/bucket_util/api.py\", line 108, in safe_upload",
      "    raise AssertionError('%s already exists on cloud storage' % cloud_path)",
      "AssertionError: gs://flutter_infra/flutter//test1.zip already exists on cloud storage"
    ]
  },
  {
    "failure": {
      "humanReason": "Uncaught Exception: AssertionError(u'gs://flutter_infra/flutter//test1.zip already exists on cloud storage',)"
    },
    "name": "$result"
  }
]